(()=>{var e={};e.id=873,e.ids=[873],e.modules={6037:e=>{"use strict";e.exports=require("mongoose")},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},8413:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>v,routeModule:()=>m,serverHooks:()=>g,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>x});var n={};r.r(n),r.d(n,{GET:()=>l});var s=r(2706),o=r(8203),i=r(5994),u=r(8264),a=r(6037);let c=new a.Schema({id:{type:Number},title:{type:String,required:!0},description:{type:[String],required:!0},testCases:[{input:{type:String,required:!0},expectedOutput:{type:String,required:!0}}]}),p=a.models.SpecificQuestion||(0,a.model)("SpecificQuestion",c);var d=r(9187);async function l(e){try{await (0,u.A)();let{id:t}=e.params;if(!t)return d.NextResponse.json({error:"ID is required"},{status:400});let r=await p.findOne({id:Number(t)});if(!r)return d.NextResponse.json({error:"Question not found"},{status:404});return d.NextResponse.json(r,{status:200})}catch(e){return console.error("Failed to fetch questions: ",e),d.NextResponse.json({error:"Failed to fetch questions"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/SpecificQuestions/[id]/route",pathname:"/api/SpecificQuestions/[id]",filename:"route",bundlePath:"app/api/SpecificQuestions/[id]/route"},resolvedPagePath:"C:\\codequest\\src\\app\\api\\SpecificQuestions\\[id]\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:f,workUnitAsyncStorage:x,serverHooks:g}=m;function v(){return(0,i.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:x})}},6487:()=>{},8335:()=>{},8264:(e,t,r)=>{"use strict";r.d(t,{A:()=>i});var n=r(6037),s=r.n(n);let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let i=async function(){if(o.conn)return o.conn;let e=process.env.MONGO_URI;if(!e)throw Error("MongoDB connection URI is not defined in environment variables.");o.promise||(o.promise=new Promise((t,r)=>{s().connect(e,{}).then(e=>t(e)).catch(e=>r(e))}));try{return o.conn=await o.promise,o.conn}catch(e){throw console.error("Error connecting to MongoDB:",e),Error("Database connection failed")}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[994,452],()=>r(8413));module.exports=n})();