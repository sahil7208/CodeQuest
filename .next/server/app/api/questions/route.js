(()=>{var e={};e.id=105,e.ids=[105],e.modules={6037:e=>{"use strict";e.exports=require("mongoose")},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},5228:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>q,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>g});var n={};t.r(n),t.d(n,{GET:()=>p});var o=t(2706),s=t(8203),i=t(5994),a=t(9187),u=t(8264),c=t(5992);async function p(){try{await (0,u.A)();let e=await c.A.find({});return a.NextResponse.json(e,{status:200})}catch(e){return console.error("Failed to fetch questions:",e),a.NextResponse.json({error:"Failed to fetch questions"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/questions/route",pathname:"/api/questions",filename:"route",bundlePath:"app/api/questions/route"},resolvedPagePath:"C:\\codequest\\src\\app\\api\\questions\\route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:l,workUnitAsyncStorage:g,serverHooks:m}=d;function q(){return(0,i.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:g})}},6487:()=>{},8335:()=>{},8264:(e,r,t)=>{"use strict";t.d(r,{A:()=>i});var n=t(6037),o=t.n(n);let s=global.mongoose;s||(s=global.mongoose={conn:null,promise:null});let i=async function(){if(s.conn)return s.conn;let e=process.env.MONGO_URI;if(!e)throw Error("MongoDB connection URI is not defined in environment variables.");s.promise||(s.promise=new Promise((r,t)=>{o().connect(e,{}).then(e=>r(e)).catch(e=>t(e))}));try{return s.conn=await s.promise,s.conn}catch(e){throw console.error("Error connecting to MongoDB:",e),Error("Database connection failed")}}},5992:(e,r,t)=>{"use strict";t.d(r,{A:()=>s});var n=t(6037);let o=new n.Schema({category:{type:String,required:!0},questions:[{title:{type:String,required:!0},id:{type:String,required:!0},difficulty:{type:String,required:!0,enum:["Easy","Medium","Hard"]},status:{type:String,required:!0,enum:["\uD83D\uDD12Locked","Unlocked"]},route:{type:String,required:!0}}]}),s=n.models.Question||(0,n.model)("Question",o)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[994,452],()=>t(5228));module.exports=n})();